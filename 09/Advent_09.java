import java.util.*;
public class Advent_09{
    public static void main(String[] args){
        System.out.println(countTailSpaces(getInput()));
        System.out.println(countTailSpaces(10,getInput()));
    }


    public static int countTailSpaces(int lengthOfRope, List<String> moves){
        int maxBoardSize = 0;
        for(String move : moves){
            maxBoardSize += Integer.parseInt(move.substring(1));
        }

        boolean[][] board = new boolean[maxBoardSize][maxBoardSize];
        int[][] locations = new int[lengthOfRope][2];
        for( int i = 0; i < locations.length; i++){
            locations[i][0] = maxBoardSize / 2;
            locations[i][1] = maxBoardSize / 2;
        }
        board[maxBoardSize / 2][maxBoardSize / 2] = true;

        for(String move : moves){
            char direction = move.charAt(0);
            int numSpaces = Integer.parseInt(move.substring(1));
            for(int i = 0; i < numSpaces; i++){
                switch( direction ){
                    case 'R':
                        locations[0][0]+=1;
                    break;
                    case 'L':
                        locations[0][0]-=1;
                    break;
                    case 'U':
                        locations[0][1]-=1;
                    break;
                    case 'D':
                        locations[0][1]+=1;
                    break;
                }

                for(int x = 1; x < lengthOfRope; x++){
                    if( locations[x-1][0] - locations[x][0] < -1 ){
                        locations[x][0]--;

                        if(locations[x-1][1] - locations[x][1] <= -1 ){
                            locations[x][1]--;
                        }
                        if(locations[x-1][1] - locations[x][1] >= 1 ){
                            locations[x][1]++;
                        }
                    }
                    if( locations[x-1][0] - locations[x][0] > 1 ){
                        locations[x][0]++;
                        if(locations[x-1][1] - locations[x][1] <= -1 ){
                            locations[x][1]--;
                        }
                        if(locations[x-1][1] - locations[x][1] >= 1 ){
                            locations[x][1]++;
                        }
                    }
                    if(locations[x-1][1] - locations[x][1] < -1 ){
                        locations[x][1]--;
                        if( locations[x-1][0] - locations[x][0] >= 1 ){
                            locations[x][0]++;
                        }
                        if( locations[x-1][0] - locations[x][0] <= -1 ){
                            locations[x][0]--;
                        }    
                    }
                    if(locations[x-1][1] - locations[x][1] > 1 ){
                        locations[x][1]++;
                        if( locations[x-1][0] - locations[x][0] >= 1 ){
                            locations[x][0]++;
                        }
                        if( locations[x-1][0] - locations[x][0] <= -1 ){
                            locations[x][0]--;
                        }   
                    }
                }

                board[locations[lengthOfRope-1][0]][locations[lengthOfRope-1][1]] = true;

            }
        }


        int totalVisited = 0;
        for(int x = 0; x < board.length; x++){
            for(int y = 0; y < board[x].length; y++){
                if(board[x][y]) totalVisited++;
            }
        }
        return totalVisited;
    }

    public static int countTailSpaces(List<String> moves){
        int maxBoardSize = 0;
        for(String move : moves){
            maxBoardSize += Integer.parseInt(move.substring(1));
        }

        boolean[][] board = new boolean[maxBoardSize][maxBoardSize];
        int headVerticalLocation = maxBoardSize / 2;
        int headHorizontalLocation = maxBoardSize / 2;
        int tailVerticalLocation = maxBoardSize / 2;
        int tailHorizontalLocation = maxBoardSize / 2;
        board[tailVerticalLocation][tailHorizontalLocation] = true;

        for(String move : moves){
            char direction = move.charAt(0);
            int numSpaces = Integer.parseInt(move.substring(1));
            for(int i = 0; i < numSpaces; i++){
                switch( direction ){
                    case 'R':
                        if( headHorizontalLocation-tailHorizontalLocation >= 1 ){
                            tailHorizontalLocation = headHorizontalLocation;
                            tailVerticalLocation = headVerticalLocation;
                            board[tailVerticalLocation][tailHorizontalLocation] = true;
                        }
                        headHorizontalLocation+=1;

                    break;
                    case 'L':
                        if( headHorizontalLocation-tailHorizontalLocation <= -1 ){
                            tailHorizontalLocation = headHorizontalLocation;
                            tailVerticalLocation = headVerticalLocation;
                            board[tailVerticalLocation][tailHorizontalLocation] = true;
                        }
                        headHorizontalLocation-=1;
                    break;
                    case 'U':
                        if( headVerticalLocation-tailVerticalLocation <= -1){
                            tailHorizontalLocation = headHorizontalLocation;
                            tailVerticalLocation = headVerticalLocation;
                            board[tailVerticalLocation][tailHorizontalLocation] = true;
                        }
                        headVerticalLocation-=1;
                    break;
                    case 'D':
                        if( headVerticalLocation-tailVerticalLocation >= 1){
                            tailHorizontalLocation = headHorizontalLocation;
                            tailVerticalLocation = headVerticalLocation;
                            board[tailVerticalLocation][tailHorizontalLocation] = true;
                        }
                        headVerticalLocation+=1;
                    break;
                }
            }
        }

        int totalVisited = 0;
        for(int x = 0; x < board.length; x++){
            for(int y = 0; y < board[x].length; y++){
                if(board[x][y]) totalVisited++;
            }
        }
        return totalVisited;
    }

    public static int countTailMoves(List<String> moves){
        int numMoves = 0;
        // have a number represent the tail's location relative to the head
        // 1 2 3          1 - left and up,    2 - up,             3 - right and up
        // 8 H 4          8 - left,           0 - same as head,   4 - right
        // 7 6 5          7 - left and down,  6 - down,           5 - right and down
        int tailDiff = 0;
        for(String move : moves){
            char direction = move.charAt(0);
            int numSpaces = Integer.parseInt(move.substring(1));
            for(int i = 0; i < numSpaces; i++){
                switch( direction ){
                    case 'R':
                    if( tailDiff==1 || tailDiff==8 || tailDiff==7 ) {
                        tailDiff = 8;
                        numMoves++;
                    }
                    else if (tailDiff ==6) tailDiff = 7;
                    else if (tailDiff ==2) tailDiff = 1;
                    else if (tailDiff ==5) tailDiff = 6;
                    else if (tailDiff ==3) tailDiff = 2;
                    else if (tailDiff ==0) tailDiff = 8;
                    else if (tailDiff ==4) tailDiff = 0;
                    break;
                    case 'L':
                    if( tailDiff==3 || tailDiff==4 || tailDiff==5 ) {
                        tailDiff = 4;
                        numMoves++;
                    }
                    else if (tailDiff ==6) tailDiff = 5;
                    else if (tailDiff ==2) tailDiff = 3;
                    else if (tailDiff ==7) tailDiff = 6;
                    else if (tailDiff ==1) tailDiff = 2;
                    else if (tailDiff ==0) tailDiff = 4;
                    else if (tailDiff ==8) tailDiff = 0;
                    break;
                    case 'U':
                    if( tailDiff==5 || tailDiff==6 || tailDiff==7 ) {
                        tailDiff = 6;
                        numMoves++;
                    }
                    else if (tailDiff ==8) tailDiff = 7;
                    else if (tailDiff ==4) tailDiff = 5;
                    else if (tailDiff ==1) tailDiff = 8;
                    else if (tailDiff ==2) tailDiff = 0;
                    else if (tailDiff ==3) tailDiff = 4;
                    else if (tailDiff ==0) tailDiff = 6;
                    break;
                    case 'D':
                    if( tailDiff==1 || tailDiff==2 || tailDiff==3 ) {
                        tailDiff = 2;
                        numMoves++;
                    }
                    else if (tailDiff ==8) tailDiff = 1;
                    else if (tailDiff ==4) tailDiff = 3;
                    else if (tailDiff ==7) tailDiff = 8;
                    else if (tailDiff ==6) tailDiff = 0;
                    else if (tailDiff ==5) tailDiff = 4;
                    else if (tailDiff ==0) tailDiff = 2;
                    break;
                }
            }
        }
        return numMoves;
    }

    public static List<String> getInput3(){
        List<String> l = new ArrayList<String>();
l.add("R5");
l.add("U8"); 
l.add("L8");
l.add("D3");
l.add("R17");
l.add("D10");
l.add("L25");
l.add("U20");
    return l;
}



    public static List<String> getInput2(){
        List<String> l = new ArrayList<String>();
l.add("R4");
l.add("U4");
l.add("L3");
l.add("D1");
l.add("R4");
l.add("D1");
l.add("L5");
l.add("R2");
        return l;
    }

    public static List<String> getInput(){
        List<String> l = new ArrayList<String>();
l.add("L1");
l.add("R1");
l.add("L1");
l.add("U1");
l.add("R2");
l.add("U1");
l.add("D2");
l.add("R2");
l.add("U1");
l.add("D2");
l.add("U2");
l.add("L2");
l.add("D1");
l.add("U1");
l.add("D2");
l.add("L2");
l.add("D1");
l.add("L2");
l.add("D2");
l.add("L1");
l.add("U2");
l.add("R2");
l.add("L1");
l.add("D2");
l.add("L2");
l.add("R2");
l.add("D2");
l.add("L1");
l.add("U1");
l.add("R1");
l.add("U1");
l.add("L1");
l.add("D1");
l.add("R1");
l.add("U2");
l.add("D2");
l.add("R1");
l.add("U1");
l.add("R1");
l.add("L1");
l.add("U1");
l.add("R1");
l.add("D1");
l.add("L1");
l.add("U1");
l.add("R1");
l.add("D1");
l.add("U1");
l.add("D1");
l.add("U1");
l.add("R2");
l.add("L2");
l.add("D2");
l.add("L2");
l.add("R1");
l.add("U2");
l.add("L2");
l.add("R1");
l.add("U1");
l.add("R2");
l.add("D2");
l.add("R2");
l.add("L2");
l.add("U2");
l.add("R2");
l.add("D2");
l.add("R1");
l.add("U1");
l.add("L2");
l.add("R1");
l.add("U1");
l.add("D2");
l.add("U2");
l.add("D1");
l.add("R2");
l.add("L2");
l.add("D2");
l.add("L2");
l.add("R2");
l.add("U1");
l.add("R2");
l.add("L2");
l.add("D2");
l.add("L1");
l.add("D1");
l.add("R2");
l.add("L1");
l.add("U2");
l.add("R1");
l.add("U2");
l.add("D1");
l.add("U2");
l.add("D1");
l.add("L1");
l.add("R2");
l.add("D2");
l.add("R2");
l.add("U2");
l.add("R1");
l.add("U2");
l.add("R2");
l.add("U1");
l.add("R1");
l.add("D2");
l.add("U2");
l.add("R2");
l.add("U1");
l.add("R2");
l.add("D2");
l.add("R1");
l.add("L1");
l.add("U3");
l.add("L2");
l.add("U1");
l.add("L2");
l.add("U1");
l.add("D1");
l.add("U2");
l.add("D1");
l.add("U2");
l.add("R2");
l.add("L1");
l.add("U3");
l.add("R1");
l.add("U1");
l.add("R3");
l.add("L3");
l.add("D3");
l.add("L2");
l.add("U1");
l.add("D3");
l.add("U1");
l.add("R1");
l.add("L1");
l.add("R2");
l.add("L1");
l.add("R3");
l.add("L3");
l.add("D1");
l.add("R2");
l.add("L3");
l.add("U3");
l.add("D1");
l.add("L2");
l.add("U2");
l.add("D2");
l.add("L2");
l.add("U1");
l.add("R1");
l.add("L2");
l.add("R3");
l.add("L3");
l.add("D3");
l.add("R2");
l.add("D3");
l.add("U1");
l.add("L3");
l.add("R1");
l.add("U2");
l.add("L1");
l.add("D3");
l.add("L1");
l.add("U1");
l.add("D3");
l.add("L3");
l.add("U2");
l.add("D1");
l.add("U2");
l.add("L3");
l.add("R1");
l.add("U2");
l.add("D2");
l.add("R3");
l.add("D3");
l.add("U2");
l.add("D3");
l.add("L3");
l.add("R3");
l.add("L1");
l.add("U3");
l.add("L1");
l.add("D1");
l.add("L2");
l.add("D2");
l.add("R1");
l.add("L3");
l.add("R2");
l.add("L3");
l.add("R3");
l.add("L1");
l.add("D1");
l.add("U3");
l.add("L2");
l.add("R2");
l.add("L2");
l.add("D3");
l.add("U3");
l.add("L3");
l.add("U3");
l.add("D1");
l.add("U2");
l.add("R2");
l.add("U1");
l.add("D3");
l.add("L3");
l.add("R1");
l.add("L3");
l.add("U3");
l.add("D1");
l.add("L3");
l.add("D2");
l.add("R1");
l.add("U1");
l.add("R1");
l.add("D2");
l.add("L2");
l.add("U1");
l.add("L2");
l.add("R2");
l.add("L2");
l.add("D3");
l.add("U3");
l.add("D4");
l.add("L3");
l.add("D4");
l.add("R3");
l.add("L2");
l.add("U3");
l.add("R3");
l.add("U1");
l.add("R4");
l.add("U2");
l.add("D1");
l.add("R3");
l.add("L1");
l.add("R1");
l.add("D3");
l.add("R2");
l.add("D1");
l.add("R2");
l.add("L2");
l.add("U2");
l.add("D1");
l.add("R1");
l.add("U2");
l.add("R3");
l.add("L2");
l.add("D1");
l.add("U3");
l.add("R2");
l.add("D4");
l.add("L3");
l.add("U1");
l.add("R1");
l.add("D2");
l.add("U1");
l.add("R3");
l.add("L4");
l.add("D2");
l.add("L1");
l.add("U3");
l.add("L2");
l.add("U3");
l.add("R1");
l.add("D1");
l.add("L2");
l.add("R4");
l.add("D4");
l.add("U1");
l.add("R3");
l.add("U3");
l.add("R1");
l.add("U3");
l.add("L2");
l.add("U3");
l.add("L2");
l.add("D4");
l.add("U1");
l.add("R1");
l.add("L2");
l.add("R2");
l.add("D2");
l.add("L2");
l.add("D2");
l.add("U4");
l.add("D4");
l.add("L2");
l.add("U2");
l.add("D3");
l.add("L4");
l.add("U4");
l.add("D4");
l.add("R1");
l.add("D4");
l.add("R1");
l.add("D1");
l.add("L1");
l.add("R1");
l.add("L1");
l.add("D2");
l.add("L4");
l.add("D2");
l.add("R3");
l.add("L1");
l.add("D2");
l.add("U3");
l.add("L2");
l.add("U3");
l.add("R4");
l.add("D4");
l.add("U1");
l.add("L1");
l.add("U4");
l.add("L4");
l.add("U3");
l.add("D2");
l.add("R3");
l.add("L1");
l.add("D3");
l.add("U3");
l.add("R1");
l.add("L3");
l.add("U1");
l.add("D1");
l.add("R1");
l.add("U3");
l.add("R2");
l.add("L1");
l.add("D1");
l.add("L3");
l.add("U1");
l.add("D1");
l.add("L2");
l.add("R3");
l.add("U4");
l.add("L5");
l.add("D5");
l.add("R5");
l.add("D3");
l.add("U3");
l.add("D1");
l.add("L5");
l.add("R2");
l.add("U1");
l.add("L2");
l.add("D1");
l.add("L1");
l.add("D4");
l.add("R1");
l.add("U1");
l.add("L1");
l.add("U1");
l.add("D3");
l.add("L4");
l.add("D1");
l.add("U5");
l.add("L1");
l.add("R5");
l.add("L2");
l.add("R4");
l.add("D5");
l.add("U2");
l.add("D3");
l.add("U4");
l.add("L1");
l.add("R2");
l.add("U4");
l.add("L4");
l.add("D3");
l.add("R1");
l.add("U1");
l.add("R3");
l.add("D3");
l.add("U5");
l.add("L3");
l.add("D3");
l.add("U5");
l.add("R4");
l.add("L1");
l.add("D4");
l.add("U1");
l.add("L1");
l.add("R4");
l.add("D5");
l.add("L5");
l.add("D3");
l.add("R5");
l.add("U3");
l.add("R2");
l.add("D2");
l.add("U2");
l.add("D5");
l.add("R5");
l.add("D5");
l.add("R2");
l.add("D5");
l.add("U2");
l.add("D2");
l.add("R1");
l.add("L5");
l.add("D2");
l.add("U2");
l.add("R5");
l.add("U1");
l.add("D5");
l.add("U5");
l.add("L2");
l.add("D5");
l.add("L1");
l.add("R4");
l.add("U4");
l.add("D1");
l.add("L5");
l.add("U4");
l.add("L1");
l.add("R3");
l.add("L3");
l.add("R3");
l.add("L3");
l.add("D3");
l.add("R4");
l.add("U5");
l.add("L2");
l.add("D3");
l.add("U2");
l.add("L1");
l.add("R5");
l.add("U1");
l.add("L3");
l.add("U4");
l.add("L4");
l.add("D4");
l.add("R1");
l.add("D4");
l.add("R5");
l.add("D5");
l.add("U5");
l.add("R5");
l.add("L3");
l.add("D3");
l.add("U2");
l.add("R5");
l.add("U5");
l.add("R2");
l.add("D5");
l.add("R1");
l.add("U2");
l.add("D5");
l.add("L3");
l.add("R5");
l.add("U5");
l.add("R4");
l.add("D6");
l.add("L4");
l.add("U4");
l.add("L6");
l.add("R2");
l.add("L4");
l.add("U5");
l.add("L1");
l.add("U6");
l.add("D4");
l.add("R3");
l.add("U2");
l.add("R1");
l.add("D5");
l.add("L4");
l.add("U2");
l.add("R6");
l.add("U1");
l.add("L2");
l.add("D6");
l.add("U1");
l.add("R2");
l.add("L3");
l.add("R2");
l.add("L5");
l.add("U1");
l.add("R3");
l.add("D3");
l.add("L4");
l.add("R5");
l.add("U1");
l.add("D3");
l.add("R6");
l.add("D5");
l.add("R4");
l.add("D3");
l.add("U2");
l.add("D4");
l.add("R5");
l.add("U4");
l.add("R2");
l.add("L2");
l.add("U5");
l.add("D5");
l.add("U6");
l.add("D4");
l.add("U5");
l.add("L5");
l.add("R1");
l.add("D3");
l.add("R3");
l.add("L3");
l.add("D3");
l.add("L3");
l.add("U6");
l.add("R5");
l.add("D6");
l.add("U5");
l.add("L1");
l.add("R4");
l.add("L1");
l.add("U4");
l.add("L5");
l.add("D5");
l.add("U4");
l.add("D3");
l.add("R3");
l.add("L4");
l.add("R4");
l.add("U6");
l.add("L5");
l.add("D2");
l.add("U3");
l.add("R4");
l.add("U5");
l.add("L5");
l.add("D6");
l.add("R5");
l.add("D5");
l.add("L3");
l.add("U6");
l.add("L3");
l.add("U5");
l.add("D2");
l.add("U4");
l.add("R4");
l.add("U3");
l.add("D1");
l.add("R2");
l.add("L6");
l.add("R2");
l.add("L3");
l.add("U5");
l.add("L1");
l.add("R4");
l.add("D2");
l.add("U5");
l.add("D2");
l.add("R4");
l.add("U6");
l.add("R6");
l.add("L6");
l.add("U6");
l.add("L4");
l.add("R5");
l.add("D3");
l.add("U1");
l.add("D6");
l.add("L1");
l.add("D3");
l.add("L4");
l.add("D6");
l.add("U3");
l.add("D2");
l.add("L2");
l.add("U5");
l.add("D2");
l.add("U5");
l.add("D6");
l.add("R4");
l.add("D1");
l.add("U1");
l.add("D5");
l.add("U1");
l.add("L7");
l.add("U3");
l.add("R3");
l.add("U5");
l.add("D2");
l.add("R7");
l.add("D6");
l.add("L7");
l.add("R6");
l.add("L3");
l.add("R3");
l.add("U1");
l.add("L4");
l.add("D4");
l.add("L6");
l.add("R1");
l.add("U4");
l.add("L3");
l.add("R3");
l.add("D3");
l.add("L2");
l.add("D7");
l.add("U7");
l.add("D7");
l.add("R2");
l.add("L6");
l.add("D2");
l.add("R6");
l.add("D6");
l.add("U5");
l.add("L4");
l.add("U3");
l.add("D6");
l.add("U3");
l.add("D1");
l.add("L7");
l.add("U7");
l.add("L4");
l.add("R3");
l.add("D6");
l.add("U2");
l.add("L6");
l.add("D3");
l.add("U7");
l.add("D2");
l.add("R7");
l.add("D4");
l.add("L4");
l.add("R4");
l.add("U2");
l.add("D3");
l.add("U2");
l.add("L4");
l.add("R4");
l.add("L4");
l.add("D6");
l.add("R4");
l.add("U1");
l.add("R7");
l.add("D7");
l.add("U7");
l.add("R6");
l.add("D4");
l.add("U2");
l.add("D4");
l.add("L5");
l.add("U4");
l.add("D6");
l.add("R4");
l.add("U2");
l.add("R1");
l.add("U4");
l.add("D5");
l.add("R1");
l.add("D7");
l.add("R4");
l.add("U1");
l.add("D4");
l.add("U6");
l.add("L6");
l.add("R1");
l.add("D1");
l.add("R1");
l.add("D6");
l.add("R6");
l.add("D3");
l.add("U1");
l.add("D5");
l.add("R4");
l.add("L1");
l.add("D6");
l.add("R6");
l.add("L8");
l.add("U1");
l.add("D7");
l.add("R4");
l.add("L2");
l.add("R6");
l.add("U7");
l.add("L2");
l.add("D5");
l.add("R6");
l.add("D3");
l.add("L4");
l.add("R5");
l.add("U7");
l.add("L3");
l.add("U8");
l.add("L1");
l.add("U6");
l.add("L8");
l.add("R7");
l.add("D2");
l.add("U3");
l.add("R4");
l.add("L8");
l.add("D4");
l.add("L1");
l.add("U1");
l.add("D7");
l.add("U8");
l.add("R7");
l.add("D2");
l.add("L5");
l.add("U6");
l.add("D7");
l.add("R4");
l.add("L1");
l.add("R3");
l.add("U1");
l.add("R2");
l.add("U1");
l.add("D7");
l.add("R6");
l.add("U7");
l.add("D6");
l.add("L2");
l.add("D8");
l.add("U4");
l.add("R8");
l.add("L5");
l.add("D6");
l.add("L7");
l.add("U7");
l.add("R8");
l.add("L5");
l.add("D5");
l.add("R4");
l.add("L5");
l.add("U8");
l.add("D4");
l.add("U6");
l.add("D2");
l.add("U5");
l.add("R7");
l.add("L8");
l.add("U7");
l.add("R3");
l.add("L8");
l.add("R6");
l.add("D4");
l.add("R2");
l.add("D6");
l.add("R5");
l.add("D2");
l.add("U6");
l.add("L4");
l.add("U8");
l.add("R3");
l.add("U1");
l.add("L6");
l.add("R1");
l.add("L3");
l.add("R1");
l.add("U3");
l.add("L8");
l.add("D5");
l.add("U6");
l.add("L8");
l.add("D6");
l.add("R2");
l.add("U6");
l.add("R4");
l.add("L8");
l.add("D1");
l.add("R6");
l.add("D8");
l.add("U6");
l.add("D6");
l.add("L3");
l.add("U4");
l.add("D2");
l.add("L2");
l.add("D7");
l.add("L5");
l.add("U3");
l.add("R8");
l.add("D6");
l.add("R5");
l.add("L8");
l.add("U5");
l.add("L9");
l.add("R7");
l.add("D5");
l.add("R2");
l.add("U5");
l.add("L3");
l.add("D9");
l.add("R4");
l.add("U1");
l.add("L3");
l.add("R5");
l.add("L7");
l.add("R8");
l.add("D1");
l.add("U4");
l.add("L4");
l.add("R3");
l.add("U8");
l.add("L8");
l.add("D8");
l.add("U9");
l.add("R6");
l.add("U3");
l.add("R2");
l.add("U8");
l.add("D9");
l.add("R3");
l.add("L2");
l.add("U9");
l.add("R9");
l.add("L8");
l.add("D2");
l.add("R1");
l.add("L8");
l.add("U7");
l.add("R3");
l.add("L1");
l.add("R9");
l.add("L4");
l.add("R2");
l.add("U3");
l.add("D8");
l.add("R5");
l.add("U9");
l.add("L9");
l.add("R1");
l.add("D5");
l.add("R5");
l.add("U4");
l.add("L9");
l.add("R6");
l.add("D5");
l.add("L2");
l.add("R6");
l.add("U1");
l.add("D5");
l.add("L3");
l.add("R1");
l.add("U5");
l.add("R4");
l.add("D4");
l.add("U8");
l.add("D2");
l.add("U6");
l.add("R6");
l.add("U5");
l.add("R3");
l.add("U5");
l.add("R5");
l.add("L8");
l.add("D9");
l.add("L7");
l.add("R1");
l.add("U7");
l.add("R5");
l.add("U6");
l.add("R8");
l.add("U2");
l.add("R2");
l.add("U8");
l.add("R7");
l.add("D3");
l.add("R6");
l.add("L8");
l.add("R4");
l.add("L8");
l.add("R8");
l.add("U8");
l.add("R3");
l.add("L3");
l.add("U1");
l.add("L9");
l.add("D9");
l.add("R9");
l.add("U4");
l.add("R1");
l.add("L3");
l.add("D4");
l.add("U5");
l.add("R7");
l.add("D6");
l.add("L9");
l.add("U7");
l.add("L4");
l.add("R8");
l.add("U8");
l.add("D4");
l.add("L5");
l.add("D9");
l.add("U2");
l.add("D9");
l.add("R4");
l.add("D8");
l.add("R8");
l.add("D8");
l.add("U9");
l.add("L6");
l.add("R6");
l.add("L2");
l.add("U9");
l.add("L4");
l.add("U10");
l.add("L1");
l.add("R10");
l.add("D3");
l.add("U6");
l.add("R5");
l.add("D3");
l.add("R4");
l.add("L4");
l.add("U7");
l.add("D9");
l.add("R2");
l.add("D10");
l.add("U9");
l.add("L7");
l.add("D4");
l.add("R2");
l.add("L10");
l.add("D5");
l.add("R5");
l.add("U9");
l.add("R4");
l.add("L7");
l.add("R5");
l.add("D3");
l.add("R6");
l.add("D8");
l.add("R6");
l.add("D10");
l.add("R7");
l.add("U4");
l.add("D5");
l.add("U6");
l.add("L3");
l.add("D3");
l.add("U10");
l.add("R10");
l.add("U10");
l.add("D9");
l.add("R6");
l.add("D2");
l.add("R9");
l.add("D8");
l.add("R7");
l.add("U10");
l.add("R4");
l.add("U6");
l.add("R7");
l.add("U2");
l.add("R5");
l.add("U6");
l.add("L4");
l.add("U8");
l.add("L6");
l.add("D8");
l.add("R2");
l.add("U2");
l.add("L4");
l.add("U4");
l.add("R5");
l.add("U10");
l.add("D8");
l.add("U7");
l.add("R5");
l.add("D3");
l.add("L2");
l.add("R9");
l.add("U10");
l.add("L1");
l.add("U5");
l.add("L1");
l.add("D3");
l.add("L9");
l.add("R9");
l.add("U2");
l.add("D3");
l.add("U8");
l.add("R10");
l.add("L2");
l.add("U9");
l.add("D4");
l.add("U4");
l.add("D10");
l.add("L4");
l.add("D3");
l.add("R3");
l.add("L2");
l.add("U8");
l.add("L4");
l.add("D6");
l.add("R2");
l.add("L3");
l.add("D6");
l.add("L4");
l.add("D5");
l.add("L7");
l.add("U9");
l.add("L3");
l.add("D4");
l.add("R6");
l.add("L10");
l.add("U5");
l.add("L3");
l.add("R3");
l.add("D6");
l.add("U1");
l.add("L3");
l.add("R5");
l.add("D8");
l.add("R11");
l.add("U2");
l.add("L11");
l.add("R7");
l.add("U8");
l.add("R4");
l.add("D4");
l.add("U6");
l.add("D4");
l.add("U9");
l.add("D5");
l.add("R9");
l.add("D9");
l.add("U6");
l.add("D1");
l.add("U3");
l.add("L4");
l.add("U3");
l.add("D11");
l.add("U11");
l.add("R4");
l.add("L3");
l.add("U5");
l.add("D1");
l.add("R4");
l.add("U6");
l.add("D4");
l.add("U3");
l.add("D8");
l.add("L7");
l.add("R8");
l.add("L9");
l.add("R3");
l.add("D4");
l.add("U6");
l.add("L2");
l.add("U6");
l.add("R3");
l.add("D8");
l.add("R1");
l.add("L5");
l.add("U8");
l.add("D3");
l.add("R8");
l.add("L8");
l.add("U3");
l.add("R2");
l.add("U11");
l.add("L9");
l.add("U4");
l.add("D10");
l.add("L7");
l.add("D1");
l.add("U2");
l.add("D7");
l.add("R4");
l.add("L2");
l.add("U8");
l.add("L5");
l.add("U5");
l.add("D1");
l.add("L11");
l.add("R4");
l.add("L7");
l.add("U2");
l.add("D9");
l.add("L4");
l.add("U11");
l.add("R8");
l.add("L1");
l.add("D10");
l.add("U5");
l.add("R4");
l.add("L8");
l.add("U8");
l.add("D11");
l.add("U8");
l.add("D3");
l.add("R4");
l.add("U8");
l.add("R2");
l.add("U3");
l.add("R9");
l.add("D4");
l.add("L2");
l.add("D4");
l.add("L4");
l.add("U4");
l.add("R5");
l.add("U4");
l.add("L10");
l.add("U4");
l.add("L4");
l.add("R8");
l.add("D5");
l.add("L2");
l.add("U5");
l.add("D9");
l.add("U10");
l.add("D6");
l.add("R9");
l.add("D4");
l.add("R10");
l.add("U4");
l.add("D12");
l.add("R7");
l.add("L12");
l.add("R8");
l.add("L11");
l.add("U1");
l.add("D4");
l.add("L1");
l.add("D7");
l.add("R1");
l.add("L5");
l.add("R9");
l.add("L3");
l.add("D7");
l.add("L2");
l.add("R6");
l.add("U2");
l.add("D2");
l.add("U9");
l.add("L4");
l.add("U11");
l.add("D4");
l.add("R7");
l.add("D7");
l.add("L11");
l.add("U11");
l.add("L1");
l.add("D9");
l.add("U6");
l.add("R3");
l.add("D3");
l.add("L9");
l.add("R7");
l.add("L6");
l.add("D6");
l.add("R11");
l.add("D10");
l.add("U11");
l.add("R1");
l.add("U2");
l.add("R9");
l.add("L6");
l.add("U7");
l.add("D5");
l.add("U7");
l.add("R4");
l.add("U12");
l.add("R2");
l.add("D1");
l.add("L7");
l.add("R5");
l.add("D6");
l.add("R1");
l.add("D11");
l.add("R9");
l.add("L6");
l.add("U11");
l.add("D7");
l.add("L7");
l.add("R9");
l.add("L7");
l.add("D12");
l.add("U7");
l.add("D12");
l.add("R3");
l.add("L2");
l.add("R10");
l.add("D1");
l.add("L9");
l.add("R3");
l.add("D6");
l.add("R11");
l.add("U2");
l.add("L2");
l.add("U3");
l.add("R3");
l.add("L6");
l.add("U3");
l.add("R1");
l.add("L5");
l.add("R7");
l.add("U2");
l.add("D8");
l.add("L9");
l.add("U7");
l.add("L9");
l.add("D12");
l.add("U3");
l.add("D9");
l.add("U1");
l.add("L10");
l.add("D9");
l.add("L11");
l.add("U6");
l.add("R9");
l.add("U10");
l.add("L5");
l.add("R11");
l.add("U3");
l.add("R9");
l.add("D12");
l.add("U1");
l.add("D11");
l.add("R12");
l.add("U1");
l.add("D7");
l.add("L1");
l.add("U7");
l.add("L5");
l.add("U8");
l.add("L2");
l.add("R6");
l.add("U13");
l.add("R3");
l.add("D8");
l.add("U2");
l.add("L5");
l.add("U7");
l.add("L7");
l.add("U13");
l.add("L3");
l.add("R5");
l.add("D1");
l.add("L9");
l.add("U2");
l.add("L7");
l.add("R9");
l.add("U12");
l.add("R9");
l.add("L13");
l.add("R1");
l.add("U11");
l.add("R4");
l.add("U6");
l.add("D6");
l.add("R13");
l.add("D13");
l.add("U5");
l.add("L9");
l.add("U2");
l.add("D9");
l.add("R12");
l.add("D13");
l.add("U9");
l.add("D10");
l.add("U11");
l.add("R11");
l.add("U12");
l.add("D5");
l.add("L1");
l.add("R2");
l.add("U2");
l.add("D5");
l.add("U1");
l.add("D8");
l.add("R8");
l.add("L1");
l.add("U9");
l.add("L11");
l.add("D10");
l.add("R1");
l.add("D6");
l.add("U5");
l.add("D11");
l.add("L13");
l.add("D2");
l.add("R1");
l.add("L1");
l.add("R7");
l.add("L1");
l.add("U2");
l.add("D6");
l.add("U4");
l.add("L7");
l.add("U8");
l.add("D7");
l.add("L11");
l.add("U5");
l.add("D5");
l.add("R1");
l.add("D6");
l.add("R1");
l.add("U9");
l.add("L11");
l.add("D6");
l.add("U10");
l.add("D10");
l.add("R2");
l.add("U13");
l.add("L5");
l.add("U9");
l.add("L13");
l.add("U7");
l.add("L3");
l.add("D9");
l.add("L13");
l.add("R5");
l.add("L5");
l.add("U5");
l.add("L13");
l.add("U10");
l.add("L1");
l.add("R10");
l.add("L8");
l.add("R13");
l.add("U13");
l.add("R7");
l.add("D6");
l.add("R4");
l.add("L5");
l.add("U3");
l.add("D6");
l.add("R13");
l.add("U9");
l.add("L10");
l.add("U13");
l.add("R3");
l.add("D8");
l.add("L8");
l.add("U5");
l.add("L9");
l.add("U4");
l.add("D11");
l.add("L14");
l.add("U11");
l.add("R1");
l.add("D7");
l.add("U4");
l.add("R11");
l.add("U3");
l.add("R2");
l.add("U11");
l.add("L6");
l.add("R2");
l.add("D5");
l.add("L1");
l.add("U1");
l.add("L11");
l.add("R5");
l.add("U10");
l.add("D12");
l.add("R3");
l.add("L6");
l.add("R3");
l.add("D9");
l.add("L4");
l.add("D11");
l.add("L11");
l.add("D4");
l.add("R10");
l.add("D3");
l.add("L12");
l.add("D8");
l.add("U7");
l.add("R2");
l.add("D1");
l.add("L5");
l.add("U11");
l.add("L9");
l.add("R4");
l.add("U4");
l.add("D11");
l.add("R9");
l.add("D3");
l.add("U6");
l.add("L4");
l.add("U4");
l.add("L8");
l.add("U6");
l.add("L14");
l.add("R13");
l.add("D5");
l.add("R5");
l.add("U5");
l.add("R2");
l.add("U8");
l.add("L12");
l.add("R2");
l.add("U12");
l.add("D4");
l.add("R3");
l.add("L5");
l.add("D11");
l.add("R7");
l.add("U9");
l.add("D10");
l.add("L1");
l.add("D4");
l.add("U4");
l.add("D1");
l.add("R9");
l.add("L10");
l.add("R11");
l.add("L8");
l.add("D10");
l.add("R10");
l.add("L3");
l.add("R1");
l.add("L9");
l.add("D4");
l.add("L8");
l.add("R7");
l.add("U12");
l.add("R5");
l.add("L10");
l.add("R7");
l.add("U6");
l.add("R7");
l.add("U8");
l.add("D1");
l.add("U1");
l.add("L1");
l.add("R2");
l.add("D14");
l.add("U4");
l.add("D5");
l.add("R2");
l.add("D1");
l.add("R5");
l.add("D6");
l.add("R3");
l.add("L12");
l.add("U11");
l.add("D1");
l.add("L7");
l.add("R10");
l.add("U2");
l.add("R6");
l.add("U11");
l.add("R12");
l.add("U2");
l.add("R4");
l.add("L1");
l.add("D7");
l.add("U2");
l.add("D9");
l.add("U12");
l.add("D11");
l.add("U2");
l.add("L4");
l.add("R10");
l.add("U13");
l.add("R2");
l.add("L8");
l.add("R13");
l.add("L11");
l.add("R13");
l.add("L13");
l.add("R5");
l.add("D2");
l.add("U10");
l.add("D14");
l.add("L8");
l.add("U11");
l.add("R1");
l.add("L15");
l.add("U13");
l.add("L4");
l.add("D9");
l.add("L1");
l.add("U14");
l.add("R10");
l.add("D2");
l.add("R15");
l.add("L12");
l.add("R15");
l.add("U15");
l.add("L3");
l.add("U1");
l.add("L1");
l.add("R9");
l.add("D11");
l.add("L9");
l.add("D3");
l.add("U12");
l.add("R1");
l.add("D7");
l.add("L8");
l.add("R10");
l.add("D2");
l.add("L4");
l.add("D2");
l.add("U12");
l.add("D12");
l.add("L15");
l.add("U3");
l.add("D13");
l.add("U13");
l.add("D3");
l.add("R4");
l.add("L7");
l.add("D6");
l.add("U7");
l.add("D7");
l.add("R2");
l.add("D2");
l.add("R10");
l.add("L12");
l.add("U14");
l.add("D1");
l.add("U5");
l.add("L8");
l.add("R1");
l.add("U5");
l.add("D8");
l.add("U1");
l.add("D15");
l.add("U13");
l.add("L15");
l.add("R1");
l.add("L10");
l.add("U14");
l.add("D15");
l.add("R10");
l.add("L13");
l.add("D8");
l.add("L7");
l.add("U11");
l.add("R7");
l.add("U10");
l.add("D15");
l.add("L1");
l.add("U5");
l.add("L2");
l.add("R6");
l.add("L4");
l.add("U15");
l.add("R13");
l.add("U4");
l.add("R7");
l.add("U4");
l.add("R10");
l.add("L3");
l.add("U10");
l.add("R10");
l.add("D13");
l.add("R11");
l.add("L12");
l.add("D12");
l.add("U7");
l.add("R8");
l.add("D14");
l.add("L4");
l.add("R4");
l.add("L8");
l.add("D6");
l.add("R8");
l.add("L5");
l.add("U6");
l.add("L7");
l.add("U14");
l.add("D14");
l.add("R14");
l.add("L9");
l.add("D5");
l.add("U14");
l.add("R16");
l.add("L4");
l.add("R14");
l.add("U3");
l.add("D10");
l.add("L5");
l.add("R9");
l.add("D4");
l.add("R14");
l.add("L16");
l.add("D13");
l.add("L4");
l.add("R13");
l.add("D5");
l.add("R5");
l.add("U1");
l.add("R6");
l.add("L15");
l.add("D16");
l.add("R15");
l.add("D11");
l.add("R11");
l.add("D6");
l.add("U7");
l.add("L10");
l.add("D7");
l.add("U12");
l.add("R6");
l.add("L2");
l.add("U7");
l.add("L8");
l.add("U14");
l.add("L5");
l.add("U6");
l.add("L10");
l.add("R16");
l.add("L13");
l.add("D13");
l.add("U7");
l.add("R9");
l.add("L8");
l.add("U3");
l.add("D6");
l.add("R2");
l.add("L4");
l.add("R15");
l.add("D12");
l.add("U7");
l.add("D4");
l.add("U2");
l.add("L10");
l.add("D4");
l.add("L11");
l.add("D12");
l.add("R5");
l.add("L13");
l.add("U16");
l.add("L12");
l.add("R3");
l.add("L16");
l.add("R14");
l.add("L8");
l.add("R7");
l.add("U7");
l.add("L7");
l.add("D12");
l.add("R2");
l.add("D5");
l.add("R14");
l.add("U9");
l.add("D15");
l.add("U2");
l.add("L10");
l.add("D1");
l.add("U13");
l.add("L2");
l.add("R13");
l.add("D5");
l.add("U1");
l.add("D2");
l.add("L7");
l.add("D14");
l.add("U12");
l.add("D8");
l.add("U10");
l.add("L3");
l.add("R1");
l.add("U14");
l.add("R8");
l.add("L12");
l.add("R8");
l.add("U2");
l.add("R1");
l.add("D14");
l.add("U5");
l.add("D11");
l.add("R16");
l.add("U1");
l.add("R13");
l.add("D2");
l.add("U14");
l.add("R11");
l.add("D12");
l.add("U17");
l.add("R12");
l.add("L6");
l.add("U4");
l.add("R16");
l.add("D4");
l.add("R2");
l.add("D1");
l.add("U6");
l.add("D11");
l.add("R8");
l.add("L7");
l.add("R3");
l.add("U3");
l.add("L14");
l.add("R11");
l.add("L9");
l.add("U9");
l.add("L2");
l.add("R6");
l.add("U11");
l.add("R9");
l.add("L15");
l.add("U7");
l.add("R6");
l.add("D15");
l.add("U11");
l.add("L5");
l.add("U2");
l.add("R8");
l.add("D13");
l.add("L5");
l.add("U6");
l.add("R13");
l.add("D15");
l.add("U11");
l.add("L10");
l.add("R16");
l.add("L14");
l.add("U15");
l.add("R3");
l.add("L9");
l.add("U11");
l.add("L6");
l.add("R7");
l.add("L6");
l.add("D16");
l.add("U8");
l.add("R2");
l.add("U14");
l.add("D14");
l.add("R15");
l.add("D2");
l.add("L16");
l.add("D14");
l.add("U17");
l.add("D6");
l.add("L16");
l.add("D7");
l.add("R2");
l.add("U17");
l.add("D2");
l.add("U2");
l.add("D15");
l.add("U5");
l.add("R9");
l.add("L10");
l.add("D16");
l.add("U1");
l.add("L5");
l.add("U6");
l.add("R10");
l.add("D11");
l.add("R1");
l.add("U7");
l.add("R13");
l.add("U6");
l.add("R2");
l.add("L11");
l.add("D13");
l.add("U8");
l.add("D4");
l.add("R15");
l.add("U8");
l.add("R14");
l.add("L17");
l.add("U5");
l.add("L12");
l.add("U11");
l.add("L14");
l.add("R12");
l.add("L2");
l.add("D10");
l.add("L14");
l.add("D10");
l.add("L11");
l.add("U15");
l.add("D7");
l.add("U5");
l.add("R10");
l.add("U4");
l.add("R14");
l.add("U3");
l.add("D9");
l.add("L6");
l.add("D10");
l.add("L1");
l.add("U4");
l.add("L15");
l.add("R4");
l.add("U13");
l.add("D18");
l.add("R15");
l.add("L3");
l.add("U17");
l.add("R5");
l.add("L3");
l.add("D3");
l.add("L1");
l.add("U10");
l.add("L3");
l.add("R5");
l.add("U13");
l.add("D2");
l.add("R17");
l.add("D3");
l.add("U4");
l.add("L15");
l.add("D5");
l.add("L18");
l.add("U7");
l.add("D7");
l.add("U10");
l.add("L18");
l.add("D14");
l.add("U18");
l.add("L11");
l.add("D3");
l.add("L15");
l.add("D14");
l.add("L16");
l.add("R2");
l.add("D8");
l.add("L12");
l.add("U11");
l.add("R12");
l.add("D2");
l.add("L3");
l.add("R12");
l.add("U7");
l.add("L9");
l.add("D8");
l.add("U7");
l.add("L10");
l.add("D2");
l.add("U10");
l.add("D16");
l.add("L17");
l.add("R13");
l.add("L12");
l.add("R18");
l.add("L6");
l.add("U2");
l.add("D6");
l.add("L15");
l.add("D8");
l.add("U14");
l.add("R12");
l.add("L8");
l.add("R6");
l.add("L17");
l.add("U5");
l.add("D4");
l.add("L8");
l.add("U16");
l.add("R8");
l.add("U12");
l.add("L1");
l.add("R6");
l.add("D11");
l.add("L10");
l.add("U13");
l.add("R4");
l.add("L9");
l.add("R7");
l.add("D1");
l.add("L17");
l.add("R4");
l.add("L13");
l.add("R8");
l.add("D14");
l.add("U3");
l.add("R10");
l.add("L18");
l.add("R11");
l.add("U3");
l.add("D5");
l.add("U2");
l.add("L14");
l.add("R12");
l.add("D12");
l.add("R11");
l.add("U5");
l.add("D17");
l.add("R2");
l.add("D6");
l.add("L13");
l.add("D4");
l.add("L5");
l.add("R7");
l.add("U7");
l.add("L12");
l.add("D16");
l.add("U6");
l.add("L1");
l.add("R18");
l.add("D4");
l.add("R11");
l.add("D10");
l.add("L11");
l.add("D2");
l.add("L1");
l.add("D5");
l.add("U2");
l.add("R19");
l.add("D10");
l.add("U14");
l.add("R1");
l.add("U11");
l.add("R15");
l.add("D2");
l.add("L15");
l.add("U19");
l.add("R3");
l.add("L2");
l.add("D12");
l.add("R2");
l.add("L15");
l.add("R8");
l.add("D3");
l.add("R8");
l.add("D11");
l.add("R17");
l.add("D5");
l.add("R16");
l.add("L8");
l.add("R12");
l.add("L5");
l.add("R14");
l.add("D3");
l.add("R19");
l.add("D4");
l.add("R18");
l.add("L4");
l.add("U12");
l.add("D7");
l.add("L8");
l.add("R11");
l.add("U14");
l.add("L12");
l.add("U17");
l.add("L1");
l.add("D5");
l.add("R8");
l.add("L18");
l.add("U16");
l.add("L15");
l.add("D13");
l.add("U18");
l.add("R11");
l.add("L7");
l.add("R19");
l.add("L15");
l.add("U10");
l.add("L4");
l.add("R9");
l.add("U7");
l.add("R8");
l.add("L16");
l.add("R8");
l.add("L17");
l.add("D8");
l.add("L17");
l.add("D18");
l.add("U9");
l.add("D2");
l.add("L6");
l.add("U6");
l.add("L7");
l.add("D18");
l.add("R1");
l.add("U13");
l.add("L2");
l.add("U1");
l.add("R8");
l.add("U11");
l.add("D14");
l.add("R6");
l.add("U13");
l.add("R2");
l.add("D11");
l.add("L5");
l.add("U12");
l.add("D7");
l.add("U4");
l.add("R4");
l.add("D19");
l.add("R17");
l.add("L10");
l.add("U5");
l.add("L1");
l.add("U4");
l.add("L6");
l.add("D11");
l.add("L16");
l.add("D9");
l.add("R16");
l.add("L3");
l.add("R1");
l.add("D3");
l.add("L5");
l.add("U18");
l.add("D13");
l.add("R10");
l.add("U5");
l.add("D4");
l.add("U17");
l.add("R4");
l.add("D18");
l.add("U1");
return l;
    }
}
